"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from acuvity.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class ExtractionrequestAnnotationsTypedDict(TypedDict):
    r"""Annotations attached to the extraction."""


class ExtractionrequestAnnotations(BaseModel):
    r"""Annotations attached to the extraction."""


class ExtractionrequestTypedDict(TypedDict):
    r"""Represents the extraction that the user wants to extract."""

    annotations: NotRequired[ExtractionrequestAnnotationsTypedDict]
    r"""Annotations attached to the extraction."""
    data: NotRequired[str]
    r"""The binary data to request extraction for."""
    internal: NotRequired[bool]
    r"""If true, this extraction is for internal use only. This can be used by agentic
    systems to mark an extraction as internal only as opposed to user facing.
    """
    label: NotRequired[str]
    r"""A means of distinguishing what was extracted, such as prompt, input file or
    code.
    """


class Extractionrequest(BaseModel):
    r"""Represents the extraction that the user wants to extract."""

    annotations: Optional[ExtractionrequestAnnotations] = None
    r"""Annotations attached to the extraction."""

    data: Optional[str] = None
    r"""The binary data to request extraction for."""

    internal: Optional[bool] = None
    r"""If true, this extraction is for internal use only. This can be used by agentic
    systems to mark an extraction as internal only as opposed to user facing.
    """

    label: Optional[str] = None
    r"""A means of distinguishing what was extracted, such as prompt, input file or
    code.
    """
